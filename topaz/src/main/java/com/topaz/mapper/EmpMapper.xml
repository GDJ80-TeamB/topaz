<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.topaz.mapper.EmpMapper">
	
	<!-- 분류 번호: #4 - 직원 등록  -->
	<insert id="insertEmp" parameterType="com.topaz.dto.Employee">
		INSERT INTO
			employee(
				emp_no,
				emp_pw,
				emp_name,
				emp_dept,
				emp_grade,
				emp_gender,
				emp_birth,
				emp_phonenumber,
				post_no,
				address,
				file_name,
				emp_hiredate,
				reg_time,
				mod_time,
				reg_id,
				mod_id,
				use_yn
			)VALUES(
				#{empNo},
				SHA2(#{empPw}, 256),
				#{empName},
				#{empDept},
				#{empGrade},
				#{empGender},
				#{empBirth},
				#{empPhoneNumber},
				#{postNo},
				#{address},
				#{fileName},
				#{empHireDate},
				NOW(),
				NOW(),
				#{empNo},
				#{empNo},
				'Y'
			)
	</insert>
	
	<!-- 분류 번호 :  #4 - 직원번호 중복 확인 -->
	<select id="selectEmpNo" parameterType="String" resultType="String">
		SELECT
			emp_no
		FROM
			employee
		WHERE
			emp_no = #{empNo}
	</select>
	
	
	<!-- 분류 번호 :  #4 - 전체 직원조회 -->
	<select id="selectEmpAll" parameterType="Map" resultType="Map">
		SELECT 
			ROW_NUMBER() OVER (ORDER BY e.emp_hiredate) AS NO, 
			e.emp_no empNo, 
			e.emp_name empName, 
		 	dept_code.cd_nm empDept, 
		   	grade_code.cd_nm empGrade,
			leave_code.cd_nm yearCnt, 
			e.use_yn useYn
		FROM
			employee AS e
		LEFT JOIN  
			`leave` AS lv
		ON 
			e.emp_no = lv.emp_no
		LEFT JOIN
			common_code AS dept_code
		ON
			dept_code.cd = e.emp_dept
			AND dept_code.crp_cd = 'E001'
		LEFT JOIN
			common_code AS grade_code
		ON
			grade_code.cd = e.emp_grade
			AND grade_code.crp_cd = 'E002'
		LEFT JOIN
			common_code AS leave_code
		ON
			leave_code.cd = lv.year_count
			AND leave_code.crp_cd = 'E004'
		WHERE
	        1=1
			<if test="startDate != null and startDate != ''">
			    AND e.emp_hiredate &gt;= #{startDate}
			</if>
			<if test="endDate != null and endDate != ''">
			    AND e.emp_hiredate &lt;= #{endDate}
			</if>
			<if test="useYn != null and useYn != ''">
			    AND e.use_yn = #{useYn}
			</if>
			<if test="empDept != null and empDept != ''">
			    AND e.emp_dept = #{empDept}
			</if>
			<if test="empGrade != null and empGrade != ''">
			    AND e.emp_grade = #{empGrade}
			</if>
			<if test="empNo != null and empNo != ''">
			    AND e.emp_no = #{empNo}
			</if>
		LIMIT #{currentPage}, #{rowPerPage};
	</select>
	
	<!-- 분류 번호 :  #4 - 전체 직원수 조회 -->
	<select id="selectEmpAllCnt" resultType="int">
		 SELECT 
		 	COUNT(*)
   		FROM employee e
    	INNER JOIN 
    		`leave` lv 
   		ON 
   			e.emp_no = lv.emp_no
    	WHERE
	        1=1
	        <if test="startDate != null and startDate != ''">
	            AND e.emp_hiredate &gt;= #{startDate}
	        </if>
	        <if test="endDate != null and endDate != ''">
	            AND e.emp_hiredate &lt;= #{endDate}
	        </if>
	        <if test="useYn != null and useYn != ''">
	            AND e.use_yn = #{useYn}
	        </if>
	        <if test="empDept != null and empDept != ''">
	            AND e.emp_dept = #{empDept}
	        </if>
	        <if test="empGrade != null and empGrade != ''">
	            AND e.emp_grade = #{empGrade}
	        </if>
	        <if test="empNo != null and empNo != ''">
	            AND e.emp_no = #{empNo}
	        </if>
	</select>
	
	<!-- 분류 번호 :  #4 - 직원 상세 조회 -->
	<select id="selectEmpOne" resultType="Map">
		SELECT
			e.emp_no empNo, 
			e.emp_pw empPw, 
			e.emp_name empName, 
			dept_code.cd_nm empDept,  
			grade_code.cd_nm empGrade, 
			e.emp_gender empGender, 
			e.emp_birth empBirth, 
			e.emp_phonenumber empPhoneNumber, 
			e.post_no postNo, 
			e.address, 
			e.emp_hiredate empHireDate,
			upload.file_name fileName
		FROM 
			employee e
		LEFT JOIN
			common_code AS dept_code
		ON 
			e.emp_dept = dept_code.cd
			AND dept_code.crp_cd = 'E001'
		LEFT JOIN
			common_code AS  grade_code
		ON
			e.emp_grade = grade_code.cd
			AND grade_code.crp_cd = 'E002'
		LEFT JOIN
			file_upload AS upload
		ON	
			e.emp_no = upload.reference_no
			AND upload.file_name = e.file_name
		WHERE
			e.emp_no = #{empNo};
	</select>
	 
	 <!-- 분류 번호 :  #4 - 직원 정보 수정 -->
	<update id="modifyEmpOne" parameterType="com.topaz.dto.Employee">
	 	UPDATE 
			employee 
        SET
            emp_dept = #{empDept},
            emp_grade = #{empGrade},
            emp_pw = SHA2(#{empPw}, 256),
            emp_phonenumber = #{empPhoneNumber},
            post_no = #{postNo},
            address = #{address},
            mod_time = NOW(),
            mod_id = #{empNo}
        WHERE 
        	emp_no = #{empNo}
	</update>
	
	<!-- 분류 번호 :  #4 - 직원 정보 삭제 -->
	<update id="deleteEmpOne" parameterType="com.topaz.dto.Employee">
	 	UPDATE 
			employee 
        SET
           	use_yn = 'N'
        WHERE 
        	emp_no = #{empNo}
	</update>
	
	<!-- 분류 번호 :  #4 - 직원 휴가 등록 -->
	<insert id="insertEmpLeave" parameterType="Map">
		INSERT INTO 
			`leave`(
				emp_no,
				emp_grade,
				year_count,
				month_count,
				half_count,
				reg_time,
				mod_time,
				reg_id,
				mod_id,
				use_yn
			)VALUES(
				#{empNo},
				#{empGrade},
				#{yearCnt},
				#{monthCnt},
				#{halfCnt},
				NOW(),
				NOW(),
				#{empNo},
				#{empNo},
				'Y'
			)
	</insert>
	
	
	<!-- 분류 번호 :  #4 - 직원 비밀번호 수정 -->
	<update id="modifyEmpPw" parameterType="com.topaz.dto.Employee">
	 	UPDATE 
			employee 
        SET
           	emp_pw = SHA2(#{newPw}, 256)
        WHERE 
        	emp_no = #{empNo}
	</update>
	
	
	
	<!-- 분류 번호 :  #2 - 변경 비밀번호 중복 확인 -->
	<select id="selectNewPw" parameterType="map" resultType="String">
		SELECT
			old_pw
		FROM
			old_pw_history
		WHERE
			user_no = #{empNo} AND  user_part = 'E' AND old_pw = SHA2(#{newPw}, 256)
	</select>
	
	<!-- 분류 번호 :  #2 - 이전 비밀번호 저장 -->
	<insert id="insertNewPw"  parameterType="map">
		INSERT INTO 
			old_pw_history(
				old_pw_no,
				user_no,
				user_part,
				old_pw,
				reg_time,
				mod_time,
				reg_id,
				mod_id,
				use_yn
			)VALUES(
				CURRENT_TIMESTAMP(5),
				#{empNo},
				'E',
				SHA2(#{currentPw}, 256),
				NOW(),
				NOW(),
				#{empNo},
				#{empNo},
				'N'
			)
	</insert>
	
	<!-- 분류 번호 :  #4 - 전체 직원조회(조직도) -->
	<select id="selectEmpAllInChart" resultType="Map">
		SELECT 
		 emp_name empName, dept_code.cd_nm empDept, grade_code.cd_nm empGrade, file_name
		FROM 
			employee AS e
		LEFT JOIN
			common_code AS grade_code
		ON 
			e.emp_grade = grade_code.cd
			AND grade_code.crp_cd = 'E002'
		LEFT JOIN
			common_code AS dept_code
		ON 
			e.emp_dept = dept_code.cd
			AND dept_code.crp_cd = 'E001'
	</select>
	
	<!-- 분류 번호 :  #4 - 전체 직원 근무 조회 -->
	<select id="selectEmpAttendance" resultType="Map">
		SELECT
			ROW_NUMBER() OVER (ORDER BY ch.reg_time DESC) AS no, 
			DATE(ch.start_time) date, 
			em.emp_name empName, 
			ch.emp_no empNo, 
			DATE_FORMAT(ch.start_time, '%H:%i:%s') strTime, 
			DATE_FORMAT(ch.end_time, '%H:%i:%s') endTime
		FROM
			commute_history AS ch
		LEFT JOIN
			employee em
		ON
			ch.emp_no = em.emp_no
		WHERE
        1=1
        <if test="startDate != null and startDate != ''">
            AND ch.start_time &gt;= #{startDate}
        </if>
        <if test="empNo != null and empNo != ''">
            AND em.emp_no = #{empNo}
        </if>
        <if test="empName != null and empName != ''">
            AND em.emp_Name = #{empName}
        </if>
        LIMIT #{currentPage}, #{rowPerPage};
	</select>
	
	<!-- 분류 번호 :  #4 - 전체 직원 근무수 조회 -->
	<select id="selectEmpAttendanceAllCnt" resultType="int">
		SELECT
			COUNT(*)
		FROM
			commute_history AS ch
		LEFT JOIN
			employee em
		ON
			ch.emp_no = em.emp_no
		WHERE
        1=1
        <if test="startDate != null and startDate != ''">
            AND em.emp_hiredate &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND em.emp_hiredate &lt;= #{endDate}
        </if>
        <if test="empNo != null and empNo != ''">
            AND em.emp_no = #{empNo}
        </if>
        <if test="empNo != null and empName != ''">
            AND em.emp_no = #{empNo}
        </if>
	</select>
	
</mapper>